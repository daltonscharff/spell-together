name: daily-tasks

on:
  schedule:
    - cron: '0 8 * * *' # Every day at 8 AM UTC
  workflow_dispatch:

jobs:
  refresh-puzzles:
    runs-on: ubuntu-latest

    steps:    
    - name: load today's puzzle
      run: |
        curl -L -X POST '${{ secrets.SUPABASE_FUNCTIONS_URL }}/load-puzzle' -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}"

    - name: delete old puzzles
      run: |
        curl --request DELETE \
          --url "${{ secrets.SUPABASE_URL }}/rest/v1/puzzle?date=lt.$(date --date '-7 days' +'%Y-%m-%d')" \
          --header 'Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}' \
          --header 'apikey: ${{ secrets.SUPABASE_ANON_KEY }}'
  
  remove-unused-rooms:
    runs-on: ubuntu-latest

    steps: 
      - name: find IDs of unused rooms
        id: get_ids
        run: |
          ids=$( \
            curl --request GET \
              --url "${{ secrets.SUPABASE_URL }}/rest/v1/most_recent_correct_guess?room_created_at=lt.$(date --date '-17 days' +'%Y-%m-%d')&or=(found_at.lt.$(date --date '-17 days' +'%Y-%m-%d'),found_at.is.NULL)" \
              --header 'Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}' \
              --header 'apikey: ${{ secrets.SUPABASE_ANON_KEY }}' | \
            jq -r 'map(.room_id) | join(",")' \
          )
          echo "::set-output name=unused_room_ids::$(echo $ids)"

      - name: delete rooms by ID
        if: ${{ steps.get_ids.outputs.unused_room_ids }} != 0
        run : |
          curl --request GET \
            --url '${{ secrets.SUPABASE_URL }}/rest/v1/room?id=in.(${{ steps.get_ids.outputs.unused_room_ids }})' \
            --header 'Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}' \
            --header 'apikey: ${{ secrets.SUPABASE_ANON_KEY }}'